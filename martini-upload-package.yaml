version: 0.2

phases:
  install:
    commands:
      # Install dependencies if needed
      - echo "Installing AWS CLI if not already installed..."

  pre_build:
    commands:
      # Fetch parameters from Parameter Store
      - PARAMETER=$(aws ssm get-parameter --name martini-upload-package --with-decryption --query "Parameter.Value" --output text)
      - BASE_URL=$(echo $PARAMETER | jq -r '.BASE_URL')
      - MARTINI_ACCESS_TOKEN=$(echo $PARAMETER | jq -r '.MARTINI_ACCESS_TOKEN')

  build:
    commands:
      # Prepare staging folder
      - cd packages
      - for dir in */; do dir=${dir%*/}; zip -r "../${dir}.zip" "$dir"; done
      - cd ..

      # Upload zip files to the endpoint
      - |
        for zipfile in *.zip; do
          echo "Uploading $zipfile"
          curl -X POST "${BASE_URL}/esbapi/packages/upload?stateOnCreate=STARTED&replaceExisting=true" \
            -H "accept: application/json" \
            -F "file=@\"${zipfile}\";type=application/x-zip-compressed" \
            -H "Authorization: Bearer ${MARTINI_ACCESS_TOKEN}"
        done

  post_build:
    commands:
      # Verify packages were uploaded successfully
      - |
        echo "Checking uploaded packages..."
        PACKAGES_RESPONSE=$(curl -s "${BASE_URL}/esbapi/packages" \
          -H "Authorization: Bearer ${MARTINI_ACCESS_TOKEN}")
      - echo "Uploaded packages:"
      - echo "$PACKAGES_RESPONSE"
      # Verify what if packages were uploaded and return which package didn't if any
      - |
        for zipfile in *.zip; do
          pkg_name=${zipfile%.zip}
          if ! echo "$PACKAGES_RESPONSE" | grep -q "$pkg_name"; then
            echo "ERROR: Package $pkg_name not found in Martini"
            exit 1
          else
            echo "SUCCESS: Package $pkg_name verified in Martini"
          fi
        done

artifacts:
  files:
    - '*.zip'
  discard-paths: yes